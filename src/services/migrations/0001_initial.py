# Generated by Django 5.2.2 on 2025-06-28 08:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text="A bried description of service type, e.g., 'services need from school.'", null=True)),
            ],
            options={
                'verbose_name': 'Service Type',
                'verbose_name_plural': 'Service Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, help_text='Full name of the submitter (for anonymous or guest submissions).', max_length=255, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email address of the submitter (for anonymous or guest submissions).', max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number of the submitter (for anonymous or guest submissions).', max_length=20, null=True)),
                ('subject', models.CharField(help_text='A brief summary or title of the service request.', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the service being requested, including all relevant information.')),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('rejected', 'Rejected')], default='new', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the service request. (e.g., for staff action).', max_length=20)),
                ('attachments', models.FileField(blank=True, help_text='Attach relevant files (e.g., photos, documents).', null=True, upload_to='services_attachments/')),
                ('resolution_details', models.TextField(blank=True, help_text='Details regarding how the service request was resolved.', null=True)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='The date and time the complaint was marked as resolved.', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_type_slug', models.CharField(default='service_request', editable=False, max_length=50)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Admin/Staff member assigned to this service request.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_requests_assigned', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, help_text='Authenticated user who submitted the complaint (if any).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_requests_submitted', to=settings.AUTH_USER_MODEL)),
                ('service_type', models.ForeignKey(blank=True, help_text='The service type this service request belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_requests', to='services.servicetype')),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'ordering': ['-submitted_at'],
            },
        ),
    ]
