# Generated by Django 5.2.2 on 2025-06-28 08:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplaintCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text="'Issues related to campus infrastructure, staff or student behavior.'", null=True)),
            ],
            options={
                'verbose_name': 'Complaint Category',
                'verbose_name_plural': 'Complaint Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, help_text='Full name of the submitter (for anonymous or guest submissions).', max_length=255, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email address of the submitter (for anonymous or guest submissions).', max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number of the submitter (for anonymous or guest submissions).', max_length=20, null=True)),
                ('subject', models.CharField(help_text='A brief summary or title of the complaint.', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the complaint, including all relevant information.')),
                ('attachments', models.FileField(blank=True, help_text='Attach relevant files (e.g., photos, documents).', null=True, upload_to='complaints_attachments/')),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('rejected', 'Rejected')], default='new', help_text='Current status of the complaint.', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the complaint (e.g., for staff action).', max_length=20)),
                ('resolution_details', models.TextField(blank=True, help_text='Details regarding how the complaint was resolved.', null=True)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='The date and time the complaint was marked as resolved.', null=True)),
                ('location_address', models.CharField(blank=True, help_text='Specific address or location related to the complaint.', max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_type_slug', models.CharField(default='complaint', editable=False, max_length=50)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Staff member or admin assigned to handle this complaint.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints_assigned', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, help_text='Authenticated user who submitted the complaint (if any).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints_submitted', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, help_text='The category this complaint belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='complaints.complaintcategory')),
            ],
            options={
                'verbose_name': 'Complaint',
                'verbose_name_plural': 'Complaints',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when this object was first created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when this object was last updated.', verbose_name='Updated At')),
                ('message', models.TextField(blank=True, help_text='Detailed message or comment about the update.')),
                ('is_public', models.BooleanField(default=False, help_text="If checked, this update will be visible to the complaint's original submitter.")),
                ('update_type', models.CharField(choices=[('comment', 'Comment'), ('status_change', 'Status Change'), ('assignment_change', 'Assignment Change'), ('priority_change', 'Priority Change'), ('resolution', 'Resolution')], default='comment', help_text='Type of update (e.g., comment, status change, assignment change).', max_length=20)),
                ('old_status', models.CharField(blank=True, choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('rejected', 'Rejected')], help_text='Old status if the update was a status change.', max_length=20, null=True)),
                ('new_status', models.CharField(blank=True, choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('rejected', 'Rejected')], help_text='New status if the update was a status change.', max_length=20, null=True)),
                ('old_priority', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], help_text='Old priority if the update was a priority change.', max_length=20, null=True)),
                ('new_priority', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], help_text='New priority if the update was a priority change.', max_length=20, null=True)),
                ('complaint', models.ForeignKey(help_text='The complaint to which this update applies.', on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='complaints.complaint')),
                ('new_assigned_to', models.ForeignKey(blank=True, help_text='New user assigned to the complaint.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_assigned_updates', to=settings.AUTH_USER_MODEL)),
                ('old_assigned_to', models.ForeignKey(blank=True, help_text='Previous user assigned to the complaint.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_assigned_updates', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user (admin/staff) who made this update.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaint_updates_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Complaint Update',
                'verbose_name_plural': 'Complaint Updates',
                'ordering': ['submitted_at'],
                'abstract': False,
            },
        ),
    ]
